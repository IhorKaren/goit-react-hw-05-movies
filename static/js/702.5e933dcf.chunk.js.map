{"version":3,"file":"static/js/702.5e933dcf.chunk.js","mappings":"0OAEMA,EAAU,mCACVC,EAAW,+BAEF,SAAeC,EAA9B,+CAAe,OAAf,oBAAe,WAA8BC,GAA9B,gGAEYC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAE,EADA,oBACmBH,IAH/B,cAELK,EAFK,yBAMJA,EAASC,MANL,sCAQL,IAAIC,MAAM,KAAMC,SARX,gF,uCCHTC,EAAYC,EAAAA,GAAAA,IAAH,+DAKTC,EAAOD,EAAAA,GAAAA,GAAH,oGAOJE,EAAQF,EAAAA,GAAAA,IAAH,yF,SCiBX,EA7BkB,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC1B,OACE,UAACL,EAAD,YACE,gBACEM,IAAG,0CAAqCF,EAAMG,aAC9CC,IAAKJ,EAAMK,kBAEb,SAACP,EAAD,WACE,UAACC,EAAD,YACE,2BACE,wBAAKC,EAAMK,kBACX,wBACyB,GAArBL,EAAMM,cAAmBC,QAAQ,GAAGC,QAAQ,SAAU,IAAM,UAGlE,2BACE,sCACA,uBAAIR,EAAMS,eAEZ,2BACE,oCACA,uBAAIR,EAAOS,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,kBAM9C,E,mBC1BKjB,EAAYC,EAAAA,GAAAA,IAAH,8CAITiB,EAAcjB,EAAAA,GAAAA,EAAH,mDAIXkB,EAAYlB,EAAAA,GAAAA,IAAH,8EAMTmB,GAASnB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,wRAeNqB,GAAarB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,qOCwBhB,EA3CqB,WAAO,IAAD,IACzB,GAA0BsB,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOnB,EAAP,KAAcoB,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAeoB,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQjC,GAAYkC,EAAAA,EAAAA,MAAZlC,QAEFmC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAmB3D,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIR,GAAW,GAFf,SAG2BlC,EAAeC,GAH1C,OAGUE,EAHV,OAII4B,EAAS5B,GACT6B,EAAU7B,EAASS,QALvB,gDAOI+B,MAAM,SAPV,yBASIT,GAAW,GATf,6EADc,uBAAC,WAAD,wBAcdU,EACD,GAAE,CAAC3C,KAGF,UAAC,EAAD,WACGgC,IAAW,SAACY,EAAA,EAAD,KACZ,SAAClB,EAAD,CAAQmB,GAAIR,EAAoBS,QAAhC,sBACA,SAAC,EAAD,CAAWpC,MAAOA,EAAOC,OAAQA,KACjC,SAACa,EAAD,sCACA,UAACC,EAAD,YACE,SAACG,EAAD,CAAYiB,GAAG,OAAf,mBACA,SAACjB,EAAD,CAAYiB,GAAG,UAAf,yBAEF,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACJ,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["services/GetMovieById.js","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/MovieDetails/MovieDatails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ca3ef83497283bd11ad4f2544336ab4a';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nexport default async function fetchMovieByID(movieId) {\n  try {\n    const response = await axios.get(\n      `${MAIN_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  list-style: none;\n  margin-left: 22px;\n  padding: 0;\n`;\n\nconst Thumb = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n\nexport { List, Thumb, Container };\n","import { List, Thumb, Container } from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, genres }) => {\n  return (\n    <Container>\n      <img\n        src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n        alt={movie.original_title}\n      />\n      <List>\n        <Thumb>\n          <li>\n            <h2>{movie.original_title}</h2>\n            <p>\n              {(movie.vote_average * 10).toFixed(2).replace(/\\.?0+$/, '') + '%'}\n            </p>\n          </li>\n          <li>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </li>\n          <li>\n            <h4>Genres</h4>\n            <p>{genres.map(el => el.name).join(', ')}</p>\n          </li>\n        </Thumb>\n      </List>\n    </Container>\n  );\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  padding-top: 40px;\n`;\n\nconst Information = styled.p`\n  margin: 5px 5px 0 70px;\n`;\n\nconst ThumbList = styled.div`\n  display: flex;\n  margin-left: 90px;\n  gap: 10px;\n`;\n\nconst GoBack = styled(Link)`\n  background-color: royalblue;\n  color: white;\n  padding: 8px 12px;\n  border-radius: 10px;\n  font-size: 16px;\n  text-decoration: none;\n  border: none;\n  transition: background-color 200ms linear;\n\n  &:hover {\n    background-color: #2ba1e0;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  font-size: 20px;\n  font-weight: 500;\n  color: black;\n  text-decoration: none;\n  transition: color 200ms linear;\n\n  :hover {\n    color: royalblue;\n  }\n\n  &.active {\n    color: royalblue;\n  }\n`;\n\nexport { Container, ThumbList, StyledLink, GoBack, Information };\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport fetchMovieByID from 'services/GetMovieById';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Container,\n  ThumbList,\n  StyledLink,\n  GoBack,\n  Information,\n} from './MovieDatails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        setLoading(true);\n        const response = await fetchMovieByID(movieId);\n        setMovie(response);\n        setGenres(response.genres);\n      } catch {\n        alert('error');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      <GoBack to={backLinkLocationRef.current}>Go back</GoBack>\n      <MovieInfo movie={movie} genres={genres} />\n      <Information>Additional information</Information>\n      <ThumbList>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n      </ThumbList>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","MAIN_URL","fetchMovieByID","movieId","axios","response","data","Error","message","Container","styled","List","Thumb","movie","genres","src","poster_path","alt","original_title","vote_average","toFixed","replace","overview","map","el","name","join","Information","ThumbList","GoBack","Link","StyledLink","useState","setMovie","setGenres","loading","setLoading","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","alert","getMovie","Loader","to","current","Suspense","fallback"],"sourceRoot":""}